MaIdentityDictionary subclass: #MaIdentitySet	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Ma-Collections-Sets'!!MaIdentitySet methodsFor: 'as yet unclassified' stamp: 'cmm 6/22/2009 13:45'!add: anObject 	^ self 		at: anObject		put: nil! !!MaIdentitySet methodsFor: 'as yet unclassified' stamp: 'cmm 10/14/2014 10:33'!addNewElement: anObject	| index bucket  |	index := self keyHash: anObject.	bucket := array at: index.	[bucket notNil] whileTrue: [ bucket key == anObject ifTrue: [ ^ false ]. bucket := bucket next ].	self atIndex: index insertKey: anObject value: nil.	^ true! !!MaIdentitySet methodsFor: 'as yet unclassified' stamp: 'cmm 1/19/2012 20:17'!collect: aBlock 	"Evaluate aBlock with each of my values as the argument.  Collect the resulting values into a collection that is like me. Answer with the new collection."	| newCollection |	newCollection := self species new: self size.	self associationsDo:		[ : each | newCollection add: (aBlock value: each key) ].	^ newCollection! !!MaIdentitySet methodsFor: 'as yet unclassified' stamp: 'cmm 6/22/2009 13:45'!do: aBlock	self keysDo: aBlock! !!MaIdentitySet methodsFor: 'as yet unclassified' stamp: 'cmm 6/22/2009 13:45'!includes: anObject	^ self includesKey: anObject! !!MaIdentitySet methodsFor: 'as yet unclassified' stamp: 'cmm 6/22/2009 13:48'!remove: anObject ifAbsent: aBlock 	^ self 		removeKey: anObject		ifAbsent: aBlock! !