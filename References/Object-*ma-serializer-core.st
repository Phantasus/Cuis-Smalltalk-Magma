'From Squeak5.2 of 13 December 2018 [latest update: #18225] on 5 May 2021 at 9:43:55 pm'!!Object methodsFor: '*ma-serializer-core' stamp: 'cmm 5/23/2013 21:56'!as32BitFloatIfFloat	^ self! !!Object methodsFor: '*ma-serializer-core' stamp: 'cmm 11/10/2014 10:30'!maEstablishPointerReferencesFor: aMaVariableObjectBuffer using: aMaObjectSerializer 	self class isPointers ifFalse: [ "don't need to do this."	^ self ].	1		to: aMaVariableObjectBuffer objectInstSize		do:			[ : index | self				slotAt: index				put: (aMaObjectSerializer objectWithOid: (aMaVariableObjectBuffer maInstVarAt: index)) ]! !!Object methodsFor: '*ma-serializer-core' stamp: 'cmm 5/28/2014 13:39'!maIsEnvironment	^ false! !!Object methodsFor: '*ma-serializer-core' stamp: 'cmm 1/16/2005 23:51'!maRequiresOwnBuffer	"Answers false if the receiver has a special oid to represent it, such as nil, true, false and other immutables do."	^ self class maInstancesRequireOwnBuffer! !!Object methodsFor: '*ma-serializer-core' stamp: 'cmm 12/13/2016 17:29'!maStreamBytesInto: aMaByteObjectBuffer for: aMaObjectSerializer 	aMaByteObjectBuffer		replaceFrom: 1		to: self size		with: self		startingAt: 1! !!Object methodsFor: '*ma-serializer-core' stamp: 'cmm 11/8/2014 12:25'!maStreamVariablyInto: aMaVariableBuffer for: aMaObjectSerializer 	"Put the receivers instance variables (both named and indexed) into aMaVariableObjectBuffer."	1		to: self maInstSize		do:			[ : index | aMaVariableBuffer				maInstVarAt: index				put: (aMaObjectSerializer oidFor: (self slotAt: index)) ]! !!Object methodsFor: '*ma-serializer-core' stamp: 'cmm 11/10/2014 13:22'!slotAt: anInteger 	"Answer the object referenced by the receiver at its anInteger'th slot."	| namedSize |	^ anInteger > (namedSize:=self class instSize)		ifTrue: [ self basicAt: (anInteger-namedSize) ]		ifFalse: [ self instVarAt: anInteger ]! !!Object methodsFor: '*ma-serializer-core' stamp: 'cmm 11/10/2014 13:14'!slotAt: anInteger put: anObject 	"Flat slot-access."	| namedSize |	^ anInteger > (namedSize:=self class instSize)		ifTrue:			[ self				basicAt: anInteger-namedSize				put: anObject ]		ifFalse:			[ self				instVarAt: anInteger				put: anObject ]! !!Object methodsFor: '*ma-serializer-core' stamp: 'cmm 12/31/2015 13:54'!wordAt: anInteger 	^ self slotAt: anInteger! !!Object methodsFor: '*ma-serializer-core' stamp: 'cmm 12/31/2015 13:58'!wordAt: index put: value 	^ self		slotAt: index		put: value! !