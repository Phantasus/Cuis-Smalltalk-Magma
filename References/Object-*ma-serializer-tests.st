'From Squeak5.2 of 13 December 2018 [latest update: #18225] on 5 May 2021 at 9:43:53 pm'!!Object methodsFor: '*ma-serializer-tests' stamp: 'cmm 6/22/2009 19:32'!maEquivalentForSerializationTest: anObject	"(sigh)  Floats and streams need their own equivalence checking."	^ self		maEquivalentForSerializationTest: anObject 		using: MaIdentityDictionary new		halt: true! !!Object methodsFor: '*ma-serializer-tests' stamp: 'cmm 11/8/2014 12:25'!maEquivalentForSerializationTest: anObject using: alreadyComparedDictionary halt: shouldHalt 	| answer identityCheck |	self == anObject ifTrue: [^true].	(anObject isKindOf: self maOriginalClass) ifFalse: [^false].	"Hm, this seems harmless enough."	self = anObject ifTrue: [ ^ true ].	identityCheck := false.	"purpose of this is for debugging, when halt is on you know where it went."	^(1 to: self maInstSize) allSatisfy: 			[:x | 			| myX otherX |			myX := self slotAt: x.			otherX := anObject slotAt: x.			answer := (alreadyComparedDictionary includesKey: myX) 						ifTrue: 							[identityCheck := true.							(alreadyComparedDictionary at: myX) = otherX]						ifFalse: 							[myX ifNotNil: [alreadyComparedDictionary at: myX put: otherX].							myX 								maEquivalentForSerializationTest: otherX								using: alreadyComparedDictionary								halt: shouldHalt].			(shouldHalt and: [answer == false]) ifTrue: [self halt] ifFalse: [answer]]! !