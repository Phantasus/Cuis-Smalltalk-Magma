MaObject subclass: #MagmaTestObject	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Magma-Tester-Test domains'!!MagmaTestObject methodsFor: 'as yet unclassified' stamp: 'cmm 10/2/2004 10:38'!doesNotUnderstand: aMessage	^ aMessage selector last = $:		ifTrue:			[ self				instVarNamed: (aMessage selector copyWithout: $:)				put: aMessage argument;				yourself ]		ifFalse:			[ self instVarNamed: aMessage selector ]! !MagmaTestObject subclass: #MagmaContact	instanceVariableNames: 'name address unused'	classVariableNames: ''	poolDictionaries: ''	category: 'Magma-Tester-Test domains'!!MagmaContact methodsFor: 'accessing' stamp: 'cmm 6/7/2004 22:31'!address	^address! !!MagmaContact methodsFor: 'accessing' stamp: 'cmm 6/7/2004 22:28'!name	^name! !!MagmaContact methodsFor: 'accessing' stamp: 'cmm 6/17/2012 18:55'!name: aString 	MagmaSessionRequest signalCommit: [ name := aString ]! !!MagmaContact methodsFor: 'as yet unclassified' stamp: 'cmm 6/7/2004 22:31'!address: aMagmaMailingAddress	address := aMagmaMailingAddress! !MagmaContact subclass: #MagmaPerson	instanceVariableNames: 'birthday spouse'	classVariableNames: ''	poolDictionaries: ''	category: 'Magma-Tester-Test domains'!!MagmaPerson methodsFor: 'accessing'!birthday	^birthday! !!MagmaPerson methodsFor: 'accessing'!spouse	^spouse! !!MagmaPerson methodsFor: 'building'!birthday: aMaTimeStamp	birthday := aMaTimeStamp! !!MagmaPerson methodsFor: 'building'!spouse: aMagmaPerson	spouse := aMagmaPerson.	aMagmaPerson spouse == self ifFalse: [ aMagmaPerson spouse: self ]! !!MagmaPerson methodsFor: 'printing' stamp: 'cmm 12/2/2004 16:43'!maPrintAbbreviatedOn: aStream	self name maPrintAbbreviatedOn: aStream! !!MagmaPerson methodsFor: 'actions'!marry: aMagmaPerson	self		spouse: aMagmaPerson;		moveInWith: aMagmaPerson! !!MagmaPerson methodsFor: 'actions'!moveInWith: aMagmaPerson	self address: aMagmaPerson address! !